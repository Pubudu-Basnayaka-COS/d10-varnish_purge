<?php

/**
 * @file
 * Contains varnish_image_purge.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use GuzzleHttp\Client;

/**
 * Implements hook_help().
 */
function varnish_image_purge_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the focal_point_varnish_purge module.
    case 'help.page.varnish_image_purge':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Purge image styles after entity update') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_update().
 */
function varnish_image_purge_entity_update(Drupal\Core\Entity\EntityInterface $entity) {

  $field_images = [];
  foreach ($entity->getFieldDefinitions() as $field_definition) {
    if ($field_definition->getType() == 'image') {
      $field_images[] = $field_definition->getName();
    }
  }

  if (count($field_images) > 0) {
    $client = new Client();
    $styles = ImageStyle::loadMultiple();
    foreach ($field_images as $field_image) {
      $file = File::load($entity->$field_image->getValue()[0]['target_id']);
      foreach ($styles as $style) {
        try {
          $request = $client->request('URIBAN', $style->buildUrl($file->getFileUri()));
        }
        catch (Exception $e) {
          \Drupal::logger('varnish_image_purge')->error('URL not purged ' . $style->buildUrl($file->getFileUri()));
        }
      }
    }
  }

}
